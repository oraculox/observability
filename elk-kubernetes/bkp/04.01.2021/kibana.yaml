---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: elastic-system
  name: kibana-config
  labels:
    app: kibana
data:
  kibana.yml: |-
    server.host: 0.0.0.0
    elasticsearch.hosts: ${ELASTICSEARCH_HOSTS}
    elasticsearch.username: ${ELASTICSEARCH_USER}
    elasticsearch.password: ${ELASTICSEARCH_PASSWORD}
    xpack.ingestManager.enabled: true
    xpack.ingestManager.fleet.enabled: true
    xpack.ingestManager.fleet.tlsCheckDisabled: true
    xpack.encryptedSavedObjects.encryptionKey: "something_at_least_32_characters"
---
apiVersion: v1
kind: Service
metadata:
  namespace: elastic-system
  name: kibana-access
  labels:
    app: kibana
spec:
  type: LoadBalancer
  selector:
    app: kibana
  ports:
  - protocol: TCP
    port: 5601
    targetPort: 5601

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: elastic-system
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.10.1
        ports:
        - containerPort: 5601
          name: webinterface
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch:9200"
        - name: ELASTICSEARCH_USER
          value: "elastic"
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-pw-elastic
              key: password
        volumeMounts:
        - name: config
          mountPath: /usr/share/kibana/config/kibana.yml
          readOnly: true
          subPath: kibana.yml
      volumes:
      - name: config
        configMap:
          name: kibana-config
---
